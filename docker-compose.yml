services:
  # Core OCN Agents
  weave:
    build: agents/weave
    command: uvicorn weave.subscriber:app --host 0.0.0.0 --port 8082
    ports:
      - "8082:8082"
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
    networks:
      - ocn-net
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8082/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  orca:
    build: agents/orca
    command: uvicorn orca_api.main:app --host 0.0.0.0 --port 8080
    ports:
      - "8080:8080"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY:-}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT:-https://orca-openai.openai.azure.com/}
      - AZURE_OPENAI_DEPLOYMENT=${AZURE_OPENAI_DEPLOYMENT:-gpt-4o-mini}
      - ORCA_MODEL_DIR=${ORCA_MODEL_DIR:-/app/models}
      - ORCA_CE_SUBSCRIBER_URL=${ORCA_CE_SUBSCRIBER_URL:-http://weave:8082/events}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    depends_on:
      weave:
        condition: service_healthy
    networks:
      - ocn-net
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  orion:
    build: agents/orion
    command: uvicorn orion.api:app --host 0.0.0.0 --port 8081
    ports:
      - "8081:8081"
    environment:
      - ORION_CE_SUBSCRIBER_URL=${ORION_CE_SUBSCRIBER_URL:-http://weave:8082/events}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    depends_on:
      weave:
        condition: service_healthy
    networks:
      - ocn-net
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8081/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Additional OCN Agents (Mock implementations for demo)
  okra:
    build: agents/orca # Reuse Orca build for now
    command: uvicorn orca_api.main:app --host 0.0.0.0 --port 8083
    ports:
      - "8083:8083"
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - DEMO_MODE=true
      - AGENT_TYPE=okra
    networks:
      - ocn-net
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8083/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  opal:
    build: agents/orca # Reuse Orca build for now
    command: uvicorn orca_api.main:app --host 0.0.0.0 --port 8084
    ports:
      - "8084:8084"
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - DEMO_MODE=true
      - AGENT_TYPE=opal
    networks:
      - ocn-net
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8084/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  oasis:
    build: agents/orca # Reuse Orca build for now
    command: uvicorn orca_api.main:app --host 0.0.0.0 --port 8085
    ports:
      - "8085:8085"
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - DEMO_MODE=true
      - AGENT_TYPE=oasis
    networks:
      - ocn-net
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8085/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  onyx:
    build: agents/orca # Reuse Orca build for now
    command: uvicorn orca_api.main:app --host 0.0.0.0 --port 8086
    ports:
      - "8086:8086"
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - DEMO_MODE=true
      - AGENT_TYPE=onyx
    networks:
      - ocn-net
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8086/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  olive:
    build: agents/orca # Reuse Orca build for now
    command: uvicorn orca_api.main:app --host 0.0.0.0 --port 8087
    ports:
      - "8087:8087"
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - DEMO_MODE=true
      - AGENT_TYPE=olive
    networks:
      - ocn-net
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8087/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # ShirtCo Gateway
  gateway:
    build: gateway
    command: uvicorn app:app --host 0.0.0.0 --port 8090
    ports:
      - "8090:8090"
    environment:
      - ORCA_URL=http://orca:8080
      - OKRA_URL=http://okra:8083
      - OPAL_URL=http://opal:8084
      - ORION_URL=http://orion:8081
      - OASIS_URL=http://oasis:8085
      - ONYX_URL=http://onyx:8086
      - OLIVE_URL=http://olive:8087
      - WEAVE_URL=http://weave:8082
      - LOG_LEVEL=${LOG_LEVEL:-info}
    depends_on:
      - orca
      - okra
      - opal
      - orion
      - oasis
      - onyx
      - olive
      - weave
    networks:
      - ocn-net
    volumes:
      - ./samples:/app/samples:ro
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8090/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - shirtco

  # ShirtCo Demo UI
  ui:
    build: ui
    ports:
      - "3000:3000"
    environment:
      - GATEWAY_URL=http://gateway:8090
      - NODE_ENV=production
    depends_on:
      gateway:
        condition: service_healthy
    networks:
      - ocn-net
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000" ]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - shirtco

  # Demo 1 Oxfords Profile
  demo1-gateway:
    build: gateway
    command: uvicorn app:app --host 0.0.0.0 --port 8090
    ports:
      - "8090:8090"
    environment:
      - ORCA_URL=http://orca:8080
      - OKRA_URL=http://okra:8083
      - OPAL_URL=http://opal:8084
      - ONYX_URL=http://onyx:8086
      - OLIVE_URL=http://olive:8087
      - WEAVE_URL=http://weave:8082
      - LOG_LEVEL=${LOG_LEVEL:-info}
    depends_on:
      - orca
      - okra
      - opal
      - onyx
      - olive
      - weave
    networks:
      - ocn-net
    volumes:
      - ./samples:/app/samples:ro
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8090/health" ]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles:
      - demo1-oxfords

  # Demo 1 Oxfords UI
  demo1-ui:
    build: ui
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_GATEWAY_URL=http://localhost:8090
      - NODE_ENV=production
    depends_on:
      demo1-gateway:
        condition: service_healthy
    networks:
      - ocn-net
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:3000" ]
      interval: 30s
      timeout: 10s
      retries: 3
    profiles:
      - demo1-oxfords

networks:
  ocn-net:
    driver: bridge
